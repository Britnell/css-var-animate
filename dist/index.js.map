{"version":3,"file":"index.js","sources":["../src/util.ts","../src/useScroller.ts","../src/useCounter.ts"],"sourcesContent":["export const getRaf = (window: {\n  requestAnimationFrame?: any;\n  webkitRequestAnimationFrame?: any;\n  mozRequestAnimationFrame?: any;\n  msRequestAnimationFrame?: any;\n  oRequestAnimationFrame?: any;\n}) =>\n  window.requestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.msRequestAnimationFrame ||\n  window.oRequestAnimationFrame;\n\nexport const asStr = (x: number | string) =>\n  typeof x === \"string\" ? x : x.toString();\n","import { useEffect, useState } from \"react\";\nimport * as React from \"react\";\nimport { getRaf, asStr } from \"./util\";\n\ntype callbackProps = {\n  scroll: number;\n  scrollMax: number;\n  perc: number;\n  top: number;\n  bottom: number;\n  element: HTMLElement;\n};\n\ntype extraCssVars = {\n  [key: string]: string | number;\n};\n\ntype targetType = {\n  ref: React.RefObject<HTMLDivElement>;\n  classTrue?: string;\n  classFalse?: string;\n  classChecker?: (props: callbackProps) => boolean;\n  customVars?: (props: callbackProps) => extraCssVars | void;\n  unwatch?: boolean;\n};\n\nconst useScroller = (targets: targetType[]) => {\n  // apply default args to each target\n  const [observed] = useState(targets);\n\n  // * * * * * * *\n  useEffect(() => {\n    // * Animation Frame Event\n    const animationFrame = getRaf(window);\n    let last = 0;\n\n    const checkItemScroll = (item: targetType) => {\n      if (!item.ref.current) return;\n      const rec = item.ref.current.getBoundingClientRect();\n\n      // * Calc Scroll vals\n      const top = Math.floor(rec.top);\n      const bottom = Math.floor(rec.bottom);\n      const scrollMax = window.innerHeight + rec.height;\n\n      let scroll = Math.floor(window.innerHeight - rec.top);\n      if (rec.top > window.innerHeight) scroll = 0;\n      if (scroll > scrollMax) scroll = scrollMax;\n      const perc = Math.floor((scroll / scrollMax) * 400) / 400;\n\n      // console.log(\" \\ts \", scroll, item.ref.current);\n      // * apply conditional classes\n      if (item.classChecker) {\n        const check = item.classChecker({\n          scroll,\n          scrollMax,\n          perc,\n          top,\n          bottom,\n          element: item.ref.current,\n        });\n\n        if (item.classFalse) {\n          const contains = item.ref.current.classList.contains(item.classFalse);\n          if (check && contains)\n            item.ref.current.classList.remove(item.classFalse);\n          if (!check && !contains)\n            item.ref.current.classList.add(item.classFalse);\n        }\n\n        if (item.classTrue) {\n          const contains = item.ref.current.classList.contains(item.classTrue);\n          if (check && !contains)\n            item.ref.current.classList.add(item.classTrue);\n          if (!check && contains)\n            item.ref.current.classList.remove(item.classTrue);\n        }\n      }\n\n      // write prop\n      if (item.customVars) {\n        const customs =\n          item.customVars({\n            perc,\n            scroll,\n            scrollMax,\n            top,\n            bottom,\n            element: item.ref.current,\n          }) || {};\n        Object.keys(customs).forEach((key) => {\n          item.ref.current?.style.setProperty(key, asStr(customs[key]));\n        });\n      } else {\n        // item.ref.current.style.setProperty(\"--s-max\", asStr(scrollMax));\n      }\n      item.ref.current.style.setProperty(\"--p\", asStr(perc));\n      item.ref.current.style.setProperty(\"--s\", asStr(scroll));\n    };\n\n    // run on every scroll pos change\n    const scrollLoop = () => {\n      observed.forEach((item) => {\n        if (!item?.unwatch) checkItemScroll(item);\n      });\n    };\n\n    // animation Frame loop\n    const loop = () => {\n      if (window.scrollY !== last) {\n        last = window.scrollY;\n        scrollLoop();\n      }\n      animationFrame(loop);\n    };\n\n    // * Observer\n\n    const observeCallback = (entries: any[]) => {\n      entries.forEach(checkEntry);\n    };\n\n    const checkEntry = (entry: any) => {\n      // * Observe event\n      const observedItem = observed.find(\n        (obs) => obs.ref.current === entry.target\n      );\n      if (!observedItem) return;\n\n      // * out event\n      if (!entry.isIntersecting) {\n        observedItem.unwatch = true;\n        checkItemScroll(observedItem);\n        return;\n      }\n\n      // * in event\n      observedItem.unwatch = false;\n      checkItemScroll(observedItem);\n    };\n\n    const Observer = new IntersectionObserver(observeCallback, {\n      root: null, // default: use viewport\n      rootMargin: \"0px\",\n      threshold: 0,\n    });\n\n    // Observe\n    observed.forEach(({ ref }) => {\n      ref.current && Observer.observe(ref.current);\n    });\n\n    // Start animation Frame loop\n    if (animationFrame) animationFrame(loop);\n\n    // ** use Effect\n    return () => {\n      // Unobserve\n      observed.forEach(\n        ({ ref }) => ref.current && Observer.unobserve(ref.current)\n      );\n    };\n  }, [observed]);\n\n  // * Eo useScroller\n};\n\nexport default useScroller;\n","import React, { useEffect, useRef } from \"react\";\nimport Bezier from \"bezier-easing\";\nimport { asStr } from \"./util\";\n\n// 5ms interval for framerate\n\nconst defaultEasings = {\n  linear: [0, 0, 1, 1],\n  \"ease-in\": [0.6, 0, 1, 1],\n  \"ease-out\": [0, 0, 0.6, 1],\n  \"ease-in-out\": [1, 0, 0, 1],\n};\n\ntype refType = React.RefObject<HTMLDivElement | HTMLButtonElement>;\n\ntype startProps = {\n  ref: refType;\n  id: string;\n  ms?: number;\n  bezier?: number[];\n  easing?: \"linear\" | \"ease-in\" | \"ease-out\" | \"ease-in-out\";\n};\n\ntype counterType = {\n  [id: string]: {\n    t?: number;\n    begin: number;\n    ms: number;\n    active: boolean;\n    ref: refType;\n    id: string;\n    easingFunction: (x: number) => number;\n  };\n};\n\nconst useCounter = () => {\n  const requestRef = useRef<number>();\n  const counterRef = useRef<counterType>({});\n\n  const frameLoop = () => {\n    if (Object.keys(counterRef.current).length > 0) {\n      Object.values(counterRef.current).forEach((counter) => {\n        const { active, begin, ms, id, easingFunction } = counter;\n        if (!active) return;\n        const t = Date.now() - begin;\n        let p = t / ms;\n        if (p > 1.0) p = 1.0;\n        const val = easingFunction(p);\n        if (counter.ref.current)\n          counter.ref.current.style.setProperty(id, asStr(val));\n        // End\n        if (t >= ms) counter.active = false;\n      });\n    }\n    requestRef.current = requestAnimationFrame(frameLoop);\n  };\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(frameLoop);\n    return () => {\n      requestRef.current && cancelAnimationFrame(requestRef.current);\n    };\n  }, []);\n\n  const start = ({\n    ref,\n    id,\n    ms = 1000,\n    bezier,\n    easing = \"linear\",\n  }: startProps) => {\n    let curve;\n    if (bezier) curve = bezier;\n    else curve = defaultEasings[easing];\n\n    const easingFunction = Bezier(curve[0], curve[1], curve[2], curve[3]);\n\n    counterRef.current[id] = {\n      begin: Date.now(),\n      active: true,\n      ms,\n      id,\n      ref,\n      easingFunction,\n    };\n  };\n\n  return { start };\n};\n\nexport default useCounter;\n"],"names":["getRaf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","asStr","x","toString","useScroller","targets","observed","useState","useEffect","checkItemScroll","item","top","bottom","scrollMax","scroll","perc","check","contains","customs_1","ref","current","rec","getBoundingClientRect","Math","floor","innerHeight","height","classChecker","element","classFalse","classList","remove","add","classTrue","customVars","Object","keys","forEach","key","style","setProperty","animationFrame","last","scrollLoop","unwatch","loop","scrollY","checkEntry","entry","observedItem","find","obs","target","isIntersecting","Observer","IntersectionObserver","entries","root","rootMargin","threshold","_a","observe","unobserve","defaultEasings","linear","ease-in","ease-out","ease-in-out","useCounter","frameLoop","counterRef","length","values","counter","active","begin","ms","id","easingFunction","val","p","t","Date","now","requestRef","useRef","cancelAnimationFrame","start","_b","bezier","_c","curve","Bezier"],"mappings":"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"}