.container {
  max-width: 400px;
  margin: 0 auto;
}

p {
  font-size: 18px;
  color: rgb(159, 159, 159);
}
p.info {
  color: black;
}

:is(p, span).code {
  color: black;
  font-family: "Courier New", Courier, monospace;
  background-color: rgb(238, 238, 238);
}
:is(p, span).code.block {
  white-space: pre;
  overflow: auto;
}

p.code {
  padding: 8px;
}

span.code {
  display: inline-block;
  margin: 0 8px;
  padding: 2px 4px;
}

/* Count Example */
.count {
  --x: 0;
}
.count h4:after {
  counter-reset: val calc(var(--x) * 100);
  content: counter(val);
}

.count .box {
  height: 20px;
  --b: 2px;
  border: var(--b) solid white;
  box-shadow: 0 0 0 var(--b) black;
  overflow: hidden;
}
.count .bar {
  background-color: rgb(0, 28, 128);
  height: 100%;
  --p: calc(var(--x) * 100% - 100%);
  transform: translateX(var(--p));
}

.buttons {
  display: flex;
  padding: 12px;
  gap: 12px;
}
.buttons button {
  padding: 4px 8px;
}

button.bling {
  display: inline-block;
  padding: 0 20px;
  height: 60px;
  background-color: rgb(36, 101, 231);
  border-radius: 12px;
  letter-spacing: 2px;
  font-size: 24px;
  color: white;

  border: 1px solid var(--c1);
  --x: calc(var(--mx) * 100%);
  --y: calc(var(--my) * 100%);

  --r: calc(10px + var(--tr) * 100%);
  --fade: calc((1 - var(--tr)) * 0.3);
  background-image: radial-gradient(
    circle at var(--x) var(--y),
    hsl(0 100% 100% / var(--fade)) var(--r),
    transparent 0
  );
  cursor: pointer;
}
button.bling:focus {
  outline: none;
}

/* Scroll */

.sc1 {
  height: 200px;
  background-color: grey;
  font-size: 32px;
  text-align: center;
}
.sc1:after {
  counter-reset: p calc(var(--v) * 100);
  content: counter(p) " %";
}

.above {
}

.second {
  width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
}

.slide {
  height: 100px;
  width: 100px;
  background-color: rgb(89, 148, 221);
  --pos: calc(var(--v) * (100vw - 100px));
  transform: translateX(var(--pos));
  transition: transform 0.1s linear;
}

.ball {
  height: 100px;
  width: 100px;
  border-radius: 50%;
  background-color: rgb(240, 153, 153);
  background-image: conic-gradient(red 180deg, green 0deg);

  --pos: calc(var(--v) * 100vw - 100px);
  --ang: calc(var(--v) * 360deg * 2);
  transform: translateX(var(--pos)) rotate(var(--ang));
  transition: transform 0.1s linear;
}

.balltwo {
  height: 100px;
  width: 100px;
  border-radius: 50%;
  background-color: rgb(240, 153, 153);
  background-image: conic-gradient(red 180deg, green 0deg);

  --pos: calc(var(--s) * 0.7px - 100px);
  --ang: calc(var(--s) * 1deg);
  transform: translateX(var(--pos)) rotate(var(--ang));
  transition: transform 0.1s linear;
}

.all {
  height: 50vmin;
  background-color: gold;
}

.pacman_container {
  --w: 100px;
  --v: 0;
  --a: 0;
  width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
}

.pacman_container {
  --v: 0;
  --a: 0;
  overflow: hidden;
}

.pacman {
  width: var(--w);
  height: var(--w);
  border-radius: 50%;

  --col: rgb(249, 211, 46);
  --mouth: calc(var(--a) * 4.5deg);
  background-image: radial-gradient(black 5px, transparent 0),
    conic-gradient(
      var(--col) calc(90deg - var(--mouth)),
      transparent calc(90deg - var(--mouth)),
      transparent calc(90deg + var(--mouth)),
      var(--col) 0deg
    );
  background-position: 0 -25px, 0 0;

  --pos: calc(var(--v) * 100vw);
  transform: translateX(var(--pos));
  transition: all 0.1s linear;
}

.dots {
  position: absolute;
  right: 0;
  height: var(--w);
  width: 100vw;
  background: radial-gradient(blue 5px, transparent 0);
  background-size: var(--w) var(--w);
  background-position: calc((1 - var(--v)) * 100vw);
  width: calc((1 - var(--v)) * 100vw - var(--w) * 0.25);
  transition: all 0.1s linear;
}

/* threshold */

.thresh {
  height: 100px;
  margin: 0 auto;
}
.thresh.before {
  background-color: rgb(154, 154, 154);
}
.thresh.after {
  background-color: rgb(134, 180, 255);
}

.fade {
  height: 100px;

  background-color: black;
  color: white;

  display: grid;
  place-items: center;
  font-size: 80px;
  font-weight: 900;

  transition: all 0.4s ease-in-out;
  transform: translateX(-100px);
  opacity: 0;
}
.fadeIn {
  transform: translateX(0);
  opacity: 1;
}

/*  Roller letter */

.roller {
  position: relative;
  font-size: 80px;
}

.roller span {
  display: inline-block;
  line-height: 0.83;
}

.rollIn .q1 {
  animation: in-one 1s ease-in-out both reverse;
}
.rollIn .q2 {
  animation: in-two 1s ease-in-out both reverse;
}
.rollIn .q3 {
  animation: in-three 1s ease-in-out both reverse;
}
.rollIn .q4 {
  animation: in-four 1s ease-in-out both reverse;
}

.rollOut .q1 {
  animation: out-one 1s ease-in-out both;
}
.rollOut .q2 {
  animation: out-two 1s ease-in-out both;
}
.rollOut .q3 {
  animation: out-three 1s ease-in-out both;
}
.rollOut .q4 {
  animation: out-four 1s ease-in-out both;
}

.rollOut {
}

@keyframes out-one {
  0% {
    transform-origin: 0% 100%;
    transform: rotate(0);
  }
  25%,
  to {
    transform-origin: 0% 100%;
    transform: rotate(-90deg);
  }
}

@keyframes out-two {
  0%,
  25% {
    transform-origin: 0% 0%;
    transform: rotate(0);
  }
  50%,
  to {
    transform-origin: 0% 0%;
    transform: rotate(-90deg);
  }
}

@keyframes out-three {
  0%,
  50% {
    transform-origin: 100% 0%;
    transform: rotate(0);
  }
  75%,
  to {
    transform-origin: 100% 0%;
    transform: rotate(-90deg);
  }
}

@keyframes out-four {
  0%,
  75% {
    transform-origin: 100% 100%;
    transform: rotate(0);
  }
  to {
    transform-origin: 100% 100%;
    transform: rotate(-90deg);
  }
}

@keyframes in-one {
  0% {
    transform-origin: 0% 100%;
    transform: rotate(0);
  }
  25%,
  to {
    transform-origin: 0% 100%;
    transform: rotate(-90deg);
  }
}

@keyframes in-two {
  0%,
  25% {
    transform-origin: 0% 0%;
    transform: rotate(0);
  }
  50%,
  to {
    transform-origin: 0% 0%;
    transform: rotate(-90deg);
  }
}

@keyframes in-three {
  0%,
  50% {
    transform-origin: 100% 0%;
    transform: rotate(0);
  }
  75%,
  to {
    transform-origin: 100% 0%;
    transform: rotate(-90deg);
  }
}

@keyframes in-four {
  0%,
  75% {
    transform-origin: 100% 100%;
    transform: rotate(0);
  }
  to {
    transform-origin: 100% 100%;
    transform: rotate(-90deg);
  }
}

.mouseover {
  height: 200px;
  background: rgb(42, 42, 42);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

  font-size: 48px;
  color: #fff;
}
.mouseover:before {
  counter-reset: val calc(var(--mx) * 100);
  content: " x: " counter(val);
}
.mouseover:after {
  counter-reset: val calc(var(--my) * 100);
  content: " y: " counter(val);
}

.mousebling {
  margin: 48px 0;
  display: grid;
  place-items: center;
}

.mousebling > div {
  display: inline-block;
}

.mousebling button {
  display: inline-block;
  padding: 24px 48px;

  --wx: calc((1 - var(--mx)) * 100%);
  --wy: calc((1 - var(--my)) * 100%);

  --bx: calc(var(--mx) * 100%);
  --by: calc(var(--my) * 100%);

  --col: rgb(36, 101, 231);

  background-color: var(--col);
  background-image: radial-gradient(
      closest-side ellipse at var(--wx) var(--wy),
      hsl(0 100% 100% / 0.15) 0px,
      transparent
    ),
    radial-gradient(
      ellipse at var(--wx) var(--wy),
      hsl(0 100% 100% / 0.4) 0px,
      transparent
    ),
    radial-gradient(
      ellipse at var(--bx) var(--by),
      hsla(238, 100%, 21%, 0.5) 0px,
      transparent
    );

  /* border: 4px solid var(--col); */
  border: none;

  border-radius: 12px;
  letter-spacing: 2px;
  font-size: 48px;
  color: white;

  cursor: pointer;
}
